{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vemul\\\\OneDrive\\\\Documents\\\\WEB DEV\\\\loginargps\\\\frontend\\\\src\\\\components\\\\SlotDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './SlotDetailsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotDetailsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const {\n    location,\n    user\n  } = state;\n  const slots = [{\n    name: 'S1',\n    state: 1\n  }, {\n    name: 'S2',\n    state: 1\n  }, {\n    name: 'S3',\n    state: 2\n  }, {\n    name: 'S4',\n    state: 0\n  }];\n  const getSlotColor = state => {\n    switch (state) {\n      case 0:\n        return 'green';\n      case 1:\n        return 'grey';\n      case 2:\n        return 'red';\n      default:\n        return 'white';\n    }\n  };\n  const handleSlotClick = slot => {\n    if (slot.state === 0) {\n      // If slot is available\n      navigate(\"/reservation\", {\n        state: {\n          slot,\n          location,\n          vehicles: user ? [user.VehicleNumber1, user.VehicleNumber2, user.VehicleNumber3] : []\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-details-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Slots for \", location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slots-container\",\n      children: slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        style: {\n          backgroundColor: getSlotColor(slot.state)\n        },\n        onClick: () => handleSlotClick(slot),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: slot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: slot.state === 0 ? 'Available' : slot.state === 1 ? 'Reserved' : 'Occupied'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotDetailsPage, \"b3n5T5F0HMh0SGh45rZXwfsCiws=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SlotDetailsPage;\nexport default SlotDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"SlotDetailsPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","jsxDEV","_jsxDEV","SlotDetailsPage","_s","navigate","state","location","user","slots","name","getSlotColor","handleSlotClick","slot","vehicles","VehicleNumber1","VehicleNumber2","VehicleNumber3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vemul/OneDrive/Documents/WEB DEV/loginargps/frontend/src/components/SlotDetailsPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './SlotDetailsPage.css';\r\n\r\nconst SlotDetailsPage = () => {\r\n  \r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const { location, user } = state;\r\n\r\n  const slots = [\r\n    { name: 'S1', state: 1 },\r\n    { name: 'S2', state: 1 },\r\n    { name: 'S3', state: 2 },\r\n    { name: 'S4', state: 0 }\r\n  ];\r\n\r\n  const getSlotColor = (state) => {\r\n    switch (state) {\r\n      case 0: return 'green';\r\n      case 1: return 'grey';\r\n      case 2: return 'red';\r\n      default: return 'white';\r\n    }\r\n  };\r\n\r\n  const handleSlotClick = (slot) => {\r\n    if (slot.state === 0) { // If slot is available\r\n      navigate(\"/reservation\", { \r\n        state: { \r\n          slot, \r\n          location, \r\n          vehicles: user ? [user.VehicleNumber1, user.VehicleNumber2, user.VehicleNumber3] : [] \r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"slot-details-page\">\r\n      <div className=\"header\">\r\n        <h2>Slots for {location.name}</h2>\r\n      </div>\r\n      <div className=\"slots-container\">\r\n        {slots.map((slot, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"slot\"\r\n            style={{ backgroundColor: getSlotColor(slot.state) }}\r\n            onClick={() => handleSlotClick(slot)}\r\n          >\r\n            <h3>{slot.name}</h3>\r\n            <p>{slot.state === 0 ? 'Available' : slot.state === 1 ? 'Reserved' : 'Occupied'}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"back-button\" onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}