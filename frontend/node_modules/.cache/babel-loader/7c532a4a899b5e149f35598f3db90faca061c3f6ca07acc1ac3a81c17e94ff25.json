{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vemul\\\\OneDrive\\\\Documents\\\\WEB DEV\\\\loginargps\\\\frontend\\\\src\\\\components\\\\SlotDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './SlotDetailsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotDetailsPage = () => {\n  _s();\n  const {\n    state: location\n  } = useLocation(); // Get the location passed from the previous page\n  const navigate = useNavigate();\n  const [slots, setSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch slots data from the backend\n  useEffect(() => {\n    if (location && location.id) {\n      const fetchSlots = async () => {\n        try {\n          const response = await fetch(`/api/slots/${location.id}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch slots');\n          }\n          const data = await response.json();\n          setSlots(data);\n        } catch (err) {\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchSlots();\n    }\n  }, [location]);\n  const getSlotColor = state => {\n    switch (state) {\n      case 0:\n        return 'green';\n      // Available\n      case 1:\n        return 'grey';\n      // Reserved\n      case 2:\n        return 'red';\n      // Occupied\n      default:\n        return 'white';\n    }\n  };\n  const handleSlotClick = slot => {\n    if (slot.state === 0) {\n      // Only navigate to reservation page for available slots\n      navigate('/reservation', {\n        state: {\n          slot,\n          location\n        }\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-details-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Slots for \", location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slots-container\",\n      children: slots.length > 0 ? slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        style: {\n          backgroundColor: getSlotColor(slot.state)\n        },\n        onClick: () => handleSlotClick(slot),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: slot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: slot.state === 0 ? 'Available' : slot.state === 1 ? 'Reserved' : 'Occupied'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No slots available for this parking area.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotDetailsPage, \"3hvKB31s9TUSQ3jXubPPo66pmAA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SlotDetailsPage;\nexport default SlotDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"SlotDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","SlotDetailsPage","_s","state","location","navigate","slots","setSlots","loading","setLoading","error","setError","id","fetchSlots","response","fetch","ok","Error","data","json","err","message","getSlotColor","handleSlotClick","slot","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","length","map","index","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vemul/OneDrive/Documents/WEB DEV/loginargps/frontend/src/components/SlotDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './SlotDetailsPage.css';\r\n\r\nconst SlotDetailsPage = () => {\r\n  const { state: location } = useLocation();  // Get the location passed from the previous page\r\n  const navigate = useNavigate();\r\n\r\n  const [slots, setSlots] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch slots data from the backend\r\n  useEffect(() => {\r\n    if (location && location.id) {\r\n      const fetchSlots = async () => {\r\n        try {\r\n          const response = await fetch(`/api/slots/${location.id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch slots');\r\n          }\r\n          const data = await response.json();\r\n          setSlots(data);\r\n        } catch (err) {\r\n          setError(err.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchSlots();\r\n    }\r\n  }, [location]);\r\n\r\n  const getSlotColor = (state) => {\r\n    switch (state) {\r\n      case 0: return 'green';  // Available\r\n      case 1: return 'grey';   // Reserved\r\n      case 2: return 'red';    // Occupied\r\n      default: return 'white';\r\n    }\r\n  };\r\n\r\n  const handleSlotClick = (slot) => {\r\n    if (slot.state === 0) {  // Only navigate to reservation page for available slots\r\n      navigate('/reservation', { state: { slot, location } });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"slot-details-page\">\r\n      <div className=\"header\">\r\n        <h2>Slots for {location.name}</h2>\r\n      </div>\r\n      <div className=\"slots-container\">\r\n        {slots.length > 0 ? (\r\n          slots.map((slot, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"slot\"\r\n              style={{ backgroundColor: getSlotColor(slot.state) }}\r\n              onClick={() => handleSlotClick(slot)}\r\n            >\r\n              <h3>{slot.name}</h3>\r\n              <p>{slot.state === 0 ? 'Available' : slot.state === 1 ? 'Reserved' : 'Occupied'}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No slots available for this parking area.</p>\r\n        )}\r\n      </div>\r\n      <button className=\"back-button\" onClick={() => navigate(-1)}>Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}